language: cpp

compiler: 
  - clang
  - gcc

os:
  - linux
  - windows

branches:
  only:
    - master

jobs:
  allow_failures:
    - os: 
      - windows

install:
      # the install step will take care of deploying a newer cmake version
      # first we create a directory for the CMake binaries
      - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
      - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
      # we use wget to fetch the cmake binaries
      - LATEST_CMAKE="cmake-3.19.0-Linux-x86_64"
      - travis_retry wget --no-check-certificate https://cmake.org/files/LatestRelease/${LATEST_CMAKE}.tar.gz
      # this is optional, but useful:
      # do a quick md5 check to ensure that the archive we downloaded did not get compromised
      # - echo "4d9a9d3351161073a67e49366d701b6fa4b0343781982dc5eef08a02a750d403 *${LATEST_CMAKE}.tar.gz" > cmake_md5.txt
      # - md5sum -c cmake_md5.txt
      # extract the binaries; the output here is quite lengthy,
      # so we swallow it to not clutter up the travis console
      - tar -xvf ${LATEST_CMAKE}.tar.gz > /dev/null
      - mv ${LATEST_CMAKE} cmake-install
      # add both the top-level directory and the bin directory from the archive
      # to the system PATH. By adding it to the front of the path we hide the
      # preinstalled CMake with our own.
      - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
      # don't forget to switch back to the main build directory once you are done
      - cd ${TRAVIS_BUILD_DIR}

before_script:
  - mkdir build
  - cd build
  - cmake ..

script: 
  - make
